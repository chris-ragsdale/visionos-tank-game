#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Tank", "TankRoot"]
    def Xform "TankRoot" (
        active = true
    )
    {
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1.0000001, 1, 1.0000001)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Xform "Cannon" (
            active = true
        )
        {
            reorder nameChildren = ["Base", "Shaft", "End", "CannonPaint"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.2, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Cube "Base" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/Cannon/CannonPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (2, 1, 2)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Cube "Shaft" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/Cannon/CannonPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.1
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (3.5, 0.5, 0.5)
                float3 xformOp:translate = (0.25, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Cube "End" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/Cannon/CannonPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.1
                float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.3, 0.3, 0.3)
                float3 xformOp:translate = (0.42, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "CannonPaint" (
                active = true
                references = @../ScratchedMetallicPaint.usdz@
            )
            {
                color3f inputs:Basecolor_Tint = (0, 0.015380035, 0.4745087) (
                    colorSpace = "srgb_displayp3"
                )
                token outputs:mtlx:surface.connect = None
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def Xform "Body" (
            active = true
        )
        {
            reorder nameChildren = ["Body", "BodyPaint"]
            float2 ui:nodegraph:node:pos = (33.23831, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def "BodyPaint" (
                active = true
                references = @../ScratchedMetallicPaint.usdz@
            )
            {
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Cube "Body" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/Body/BodyPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double size = 0.2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (3, 0.66, 2)
                float3 xformOp:translate = (0, 0.1, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def Xform "WheelsRight" (
            active = true
        )
        {
            reorder nameChildren = ["Roadwheel", "Wheel", "Wheel_1", "Wheel_2", "Wheel_3", "WheelPaint", "RoadwheelPaint"]
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.05, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Capsule "Roadwheel" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (0, 0, 1.5707964)
                }
            )
            {
                uniform token axis = "Y"
                double height = 0.2
                rel material:binding = </Root/TankRoot/WheelsRight/RoadwheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                quatf xformOp:orient = (0.70710677, 0, 0, 0.70710677)
                float3 xformOp:scale = (0.7, 1.5, 0.5)
                float3 xformOp:translate = (-2.7939677e-9, 0.0425, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsRight/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (0.2, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "WheelPaint" (
                active = true
                references = @../BlackABSPlastic.usdz@
            )
            {
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "RoadwheelPaint" (
                active = true
                references = @../ScratchedMetallicPaint.usdz@
            )
            {
                color3f inputs:Basecolor_Tint = (0.5502963, 0.5803167, 0.5859375) (
                    colorSpace = "srgb_displayp3"
                )
                token outputs:mtlx:surface.connect = None
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_1" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsRight/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (0.07, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsRight/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (-0.07, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_3" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsRight/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (72.36331, 511.47977)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (-0.2, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def Xform "WheelsLeft" (
            active = true
        )
        {
            reorder nameChildren = ["Roadwheel", "Wheel", "Wheel_1", "Wheel_2", "Wheel_3", "WheelPaint", "RoadwheelPaint"]
            float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
            int ui:nodegraph:node:stackingOrder = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (0, 0.05, -0.3894397)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Capsule "Roadwheel" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
                customData = {
                    float3 rotationEulerHint = (0, 0, 1.5707964)
                }
            )
            {
                uniform token axis = "Y"
                double height = 0.2
                rel material:binding = </Root/TankRoot/WheelsLeft/RoadwheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                quatf xformOp:orient = (0.70710677, 0, 0, 0.70710677)
                float3 xformOp:scale = (0.7, 1.5, 0.5)
                float3 xformOp:translate = (-2.7939677e-9, 0.0425, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsLeft/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (0.2, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "WheelPaint" (
                active = true
                references = @../BlackABSPlastic.usdz@
            )
            {
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "RoadwheelPaint" (
                active = true
                references = @../ScratchedMetallicPaint.usdz@
            )
            {
                color3f inputs:Basecolor_Tint = (0.5502963, 0.5803167, 0.5859375) (
                    colorSpace = "srgb_displayp3"
                )
                token outputs:mtlx:surface.connect = None
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_1" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsLeft/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (32.36331, 471.47977)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (0.07, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_2" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsLeft/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (52.36331, 491.47977)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (-0.07, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def Sphere "Wheel_3" (
                active = true
                prepend apiSchemas = ["MaterialBindingAPI"]
            )
            {
                rel material:binding = </Root/TankRoot/WheelsLeft/WheelPaint> (
                    bindMaterialAs = "weakerThanDescendants"
                )
                double radius = 0.1
                float2 ui:nodegraph:node:pos = (72.36331, 511.47977)
                int ui:nodegraph:node:stackingOrder = 3
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (0.6, 0.6, 0.6)
                float3 xformOp:translate = (-0.2, 0, 0.2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }
    }
}

